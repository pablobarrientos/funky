$dokka.format:markdown
$dokka.linkExtension:md
$dokka.location:org.funky.collections$cycle(kotlin.collections.Iterable((org.funky.collections.cycle.A)))org.funky.collections/kotlin.collections.-iterable/cycle.md
$dokka.location:org.funky.collections$filterMap(kotlin.collections.List((org.funky.collections.filterMap.A)), kotlin.Function1((org.funky.collections.filterMap.A, kotlin.Boolean)), kotlin.Function1((org.funky.collections.filterMap.A, org.funky.collections.filterMap.B)))org.funky.collections/kotlin.collections.-list/filter-map.md
$dokka.location:org.funky.collections$fold1(kotlin.collections.Iterable((org.funky.collections.fold1.A)), kotlin.Function2((org.funky.collections.fold1.A, , )))org.funky.collections/kotlin.collections.-iterable/fold1.md
$dokka.location:org.funky.collections$foldRight1(kotlin.collections.Iterable((org.funky.collections.foldRight1.A)), kotlin.Function2((org.funky.collections.foldRight1.A, , )))org.funky.collections/kotlin.collections.-iterable/fold-right1.md
$dokka.location:org.funky.collections$head(kotlin.collections.Iterable((org.funky.collections.head.A)))org.funky.collections/kotlin.collections.-iterable/head.md
$dokka.location:org.funky.collections$init(kotlin.collections.Iterable((org.funky.collections.init.A)))org.funky.collections/kotlin.collections.-iterable/init.md
$dokka.location:org.funky.collections$inits(kotlin.collections.List((org.funky.collections.inits.A)))org.funky.collections/kotlin.collections.-list/inits.md
$dokka.location:org.funky.collections$mapFilter(kotlin.collections.List((org.funky.collections.mapFilter.A)), kotlin.Function1((org.funky.collections.mapFilter.A, org.funky.collections.mapFilter.B)), kotlin.Function1((org.funky.collections.mapFilter.B, kotlin.Boolean)))org.funky.collections/kotlin.collections.-list/map-filter.md
$dokka.location:org.funky.collections$partition(kotlin.collections.Iterable((org.funky.collections.partition.A)), kotlin.Function1((org.funky.collections.partition.A, kotlin.Boolean)))org.funky.collections/kotlin.collections.-iterable/partition.md
$dokka.location:org.funky.collections$tail(kotlin.collections.Iterable((org.funky.collections.tail.A)))org.funky.collections/kotlin.collections.-iterable/tail.md
$dokka.location:org.funky.collections$unzip(kotlin.collections.Iterable((kotlin.Pair((org.funky.collections.unzip.A, org.funky.collections.unzip.B)))))org.funky.collections/kotlin.collections.-iterable/unzip.md
$dokka.location:org.funky.collections$zipWith(kotlin.collections.Iterable((org.funky.collections.zipWith.A)), kotlin.Function2((org.funky.collections.zipWith.A, org.funky.collections.zipWith.B, org.funky.collections.zipWith.C)), kotlin.collections.Iterable((org.funky.collections.zipWith.B)))org.funky.collections/kotlin.collections.-iterable/zip-with.md
$dokka.location:org.funky.curry$curried(kotlin.Function10((org.funky.curry.curried.A, org.funky.curry.curried.B, org.funky.curry.curried.C, org.funky.curry.curried.D, org.funky.curry.curried.E, org.funky.curry.curried.F, org.funky.curry.curried.G, org.funky.curry.curried.H, org.funky.curry.curried.I, org.funky.curry.curried.J, org.funky.curry.curried.Z)))org.funky.curry/kotlin.-function10/curried.md
$dokka.location:org.funky.curry$curried(kotlin.Function11((org.funky.curry.curried.A, org.funky.curry.curried.B, org.funky.curry.curried.C, org.funky.curry.curried.D, org.funky.curry.curried.E, org.funky.curry.curried.F, org.funky.curry.curried.G, org.funky.curry.curried.H, org.funky.curry.curried.I, org.funky.curry.curried.J, org.funky.curry.curried.K, org.funky.curry.curried.Z)))org.funky.curry/kotlin.-function11/curried.md
$dokka.location:org.funky.curry$curried(kotlin.Function12((org.funky.curry.curried.A, org.funky.curry.curried.B, org.funky.curry.curried.C, org.funky.curry.curried.D, org.funky.curry.curried.E, org.funky.curry.curried.F, org.funky.curry.curried.G, org.funky.curry.curried.H, org.funky.curry.curried.I, org.funky.curry.curried.J, org.funky.curry.curried.K, org.funky.curry.curried.L, org.funky.curry.curried.Z)))org.funky.curry/kotlin.-function12/curried.md
$dokka.location:org.funky.curry$curried(kotlin.Function13((org.funky.curry.curried.A, org.funky.curry.curried.B, org.funky.curry.curried.C, org.funky.curry.curried.D, org.funky.curry.curried.E, org.funky.curry.curried.F, org.funky.curry.curried.G, org.funky.curry.curried.H, org.funky.curry.curried.I, org.funky.curry.curried.J, org.funky.curry.curried.K, org.funky.curry.curried.L, org.funky.curry.curried.M, org.funky.curry.curried.Z)))org.funky.curry/kotlin.-function13/curried.md
$dokka.location:org.funky.curry$curried(kotlin.Function14((org.funky.curry.curried.A, org.funky.curry.curried.B, org.funky.curry.curried.C, org.funky.curry.curried.D, org.funky.curry.curried.E, org.funky.curry.curried.F, org.funky.curry.curried.G, org.funky.curry.curried.H, org.funky.curry.curried.I, org.funky.curry.curried.J, org.funky.curry.curried.K, org.funky.curry.curried.L, org.funky.curry.curried.M, org.funky.curry.curried.N, org.funky.curry.curried.Z)))org.funky.curry/kotlin.-function14/curried.md
$dokka.location:org.funky.curry$curried(kotlin.Function15((org.funky.curry.curried.A, org.funky.curry.curried.B, org.funky.curry.curried.C, org.funky.curry.curried.D, org.funky.curry.curried.E, org.funky.curry.curried.F, org.funky.curry.curried.G, org.funky.curry.curried.H, org.funky.curry.curried.I, org.funky.curry.curried.J, org.funky.curry.curried.K, org.funky.curry.curried.L, org.funky.curry.curried.M, org.funky.curry.curried.N, org.funky.curry.curried.O, org.funky.curry.curried.Z)))org.funky.curry/kotlin.-function15/curried.md
$dokka.location:org.funky.curry$curried(kotlin.Function16((org.funky.curry.curried.A, org.funky.curry.curried.B, org.funky.curry.curried.C, org.funky.curry.curried.D, org.funky.curry.curried.E, org.funky.curry.curried.F, org.funky.curry.curried.G, org.funky.curry.curried.H, org.funky.curry.curried.I, org.funky.curry.curried.J, org.funky.curry.curried.K, org.funky.curry.curried.L, org.funky.curry.curried.M, org.funky.curry.curried.N, org.funky.curry.curried.O, org.funky.curry.curried.P, org.funky.curry.curried.Z)))org.funky.curry/kotlin.-function16/curried.md
$dokka.location:org.funky.curry$curried(kotlin.Function17((org.funky.curry.curried.A, org.funky.curry.curried.B, org.funky.curry.curried.C, org.funky.curry.curried.D, org.funky.curry.curried.E, org.funky.curry.curried.F, org.funky.curry.curried.G, org.funky.curry.curried.H, org.funky.curry.curried.I, org.funky.curry.curried.J, org.funky.curry.curried.K, org.funky.curry.curried.L, org.funky.curry.curried.M, org.funky.curry.curried.N, org.funky.curry.curried.O, org.funky.curry.curried.P, org.funky.curry.curried.Q, org.funky.curry.curried.Z)))org.funky.curry/kotlin.-function17/curried.md
$dokka.location:org.funky.curry$curried(kotlin.Function18((org.funky.curry.curried.A, org.funky.curry.curried.B, org.funky.curry.curried.C, org.funky.curry.curried.D, org.funky.curry.curried.E, org.funky.curry.curried.F, org.funky.curry.curried.G, org.funky.curry.curried.H, org.funky.curry.curried.I, org.funky.curry.curried.J, org.funky.curry.curried.K, org.funky.curry.curried.L, org.funky.curry.curried.M, org.funky.curry.curried.N, org.funky.curry.curried.O, org.funky.curry.curried.P, org.funky.curry.curried.Q, org.funky.curry.curried.R, org.funky.curry.curried.Z)))org.funky.curry/kotlin.-function18/curried.md
$dokka.location:org.funky.curry$curried(kotlin.Function19((org.funky.curry.curried.A, org.funky.curry.curried.B, org.funky.curry.curried.C, org.funky.curry.curried.D, org.funky.curry.curried.E, org.funky.curry.curried.F, org.funky.curry.curried.G, org.funky.curry.curried.H, org.funky.curry.curried.I, org.funky.curry.curried.J, org.funky.curry.curried.K, org.funky.curry.curried.L, org.funky.curry.curried.M, org.funky.curry.curried.N, org.funky.curry.curried.O, org.funky.curry.curried.P, org.funky.curry.curried.Q, org.funky.curry.curried.R, org.funky.curry.curried.S, org.funky.curry.curried.Z)))org.funky.curry/kotlin.-function19/curried.md
$dokka.location:org.funky.curry$curried(kotlin.Function2((org.funky.curry.curried.A, org.funky.curry.curried.B, org.funky.curry.curried.Z)))org.funky.curry/kotlin.-function2/curried.md
$dokka.location:org.funky.curry$curried(kotlin.Function20((org.funky.curry.curried.A, org.funky.curry.curried.B, org.funky.curry.curried.C, org.funky.curry.curried.D, org.funky.curry.curried.E, org.funky.curry.curried.F, org.funky.curry.curried.G, org.funky.curry.curried.H, org.funky.curry.curried.I, org.funky.curry.curried.J, org.funky.curry.curried.K, org.funky.curry.curried.L, org.funky.curry.curried.M, org.funky.curry.curried.N, org.funky.curry.curried.O, org.funky.curry.curried.P, org.funky.curry.curried.Q, org.funky.curry.curried.R, org.funky.curry.curried.S, org.funky.curry.curried.T, org.funky.curry.curried.Z)))org.funky.curry/kotlin.-function20/curried.md
$dokka.location:org.funky.curry$curried(kotlin.Function21((org.funky.curry.curried.A, org.funky.curry.curried.B, org.funky.curry.curried.C, org.funky.curry.curried.D, org.funky.curry.curried.E, org.funky.curry.curried.F, org.funky.curry.curried.G, org.funky.curry.curried.H, org.funky.curry.curried.I, org.funky.curry.curried.J, org.funky.curry.curried.K, org.funky.curry.curried.L, org.funky.curry.curried.M, org.funky.curry.curried.N, org.funky.curry.curried.O, org.funky.curry.curried.P, org.funky.curry.curried.Q, org.funky.curry.curried.R, org.funky.curry.curried.S, org.funky.curry.curried.T, org.funky.curry.curried.U, org.funky.curry.curried.Z)))org.funky.curry/kotlin.-function21/curried.md
$dokka.location:org.funky.curry$curried(kotlin.Function22((org.funky.curry.curried.A, org.funky.curry.curried.B, org.funky.curry.curried.C, org.funky.curry.curried.D, org.funky.curry.curried.E, org.funky.curry.curried.F, org.funky.curry.curried.G, org.funky.curry.curried.H, org.funky.curry.curried.I, org.funky.curry.curried.J, org.funky.curry.curried.K, org.funky.curry.curried.L, org.funky.curry.curried.M, org.funky.curry.curried.N, org.funky.curry.curried.O, org.funky.curry.curried.P, org.funky.curry.curried.Q, org.funky.curry.curried.R, org.funky.curry.curried.S, org.funky.curry.curried.T, org.funky.curry.curried.U, org.funky.curry.curried.V, org.funky.curry.curried.Z)))org.funky.curry/kotlin.-function22/curried.md
$dokka.location:org.funky.curry$curried(kotlin.Function3((org.funky.curry.curried.A, org.funky.curry.curried.B, org.funky.curry.curried.C, org.funky.curry.curried.Z)))org.funky.curry/kotlin.-function3/curried.md
$dokka.location:org.funky.curry$curried(kotlin.Function4((org.funky.curry.curried.A, org.funky.curry.curried.B, org.funky.curry.curried.C, org.funky.curry.curried.D, org.funky.curry.curried.Z)))org.funky.curry/kotlin.-function4/curried.md
$dokka.location:org.funky.curry$curried(kotlin.Function5((org.funky.curry.curried.A, org.funky.curry.curried.B, org.funky.curry.curried.C, org.funky.curry.curried.D, org.funky.curry.curried.E, org.funky.curry.curried.Z)))org.funky.curry/kotlin.-function5/curried.md
$dokka.location:org.funky.curry$curried(kotlin.Function6((org.funky.curry.curried.A, org.funky.curry.curried.B, org.funky.curry.curried.C, org.funky.curry.curried.D, org.funky.curry.curried.E, org.funky.curry.curried.F, org.funky.curry.curried.Z)))org.funky.curry/kotlin.-function6/curried.md
$dokka.location:org.funky.curry$curried(kotlin.Function7((org.funky.curry.curried.A, org.funky.curry.curried.B, org.funky.curry.curried.C, org.funky.curry.curried.D, org.funky.curry.curried.E, org.funky.curry.curried.F, org.funky.curry.curried.G, org.funky.curry.curried.Z)))org.funky.curry/kotlin.-function7/curried.md
$dokka.location:org.funky.curry$curried(kotlin.Function8((org.funky.curry.curried.A, org.funky.curry.curried.B, org.funky.curry.curried.C, org.funky.curry.curried.D, org.funky.curry.curried.E, org.funky.curry.curried.F, org.funky.curry.curried.G, org.funky.curry.curried.H, org.funky.curry.curried.Z)))org.funky.curry/kotlin.-function8/curried.md
$dokka.location:org.funky.curry$curried(kotlin.Function9((org.funky.curry.curried.A, org.funky.curry.curried.B, org.funky.curry.curried.C, org.funky.curry.curried.D, org.funky.curry.curried.E, org.funky.curry.curried.F, org.funky.curry.curried.G, org.funky.curry.curried.H, org.funky.curry.curried.I, org.funky.curry.curried.Z)))org.funky.curry/kotlin.-function9/curried.md
$dokka.location:org.funky.curry$uncurried(kotlin.Function1((org.funky.curry.uncurried.A, kotlin.Function1((org.funky.curry.uncurried.B, kotlin.Function1((org.funky.curry.uncurried.C, kotlin.Function1((org.funky.curry.uncurried.D, kotlin.Function1((org.funky.curry.uncurried.E, kotlin.Function1((org.funky.curry.uncurried.F, kotlin.Function1((org.funky.curry.uncurried.G, kotlin.Function1((org.funky.curry.uncurried.H, kotlin.Function1((org.funky.curry.uncurried.I, kotlin.Function1((org.funky.curry.uncurried.J, kotlin.Function1((org.funky.curry.uncurried.K, kotlin.Function1((org.funky.curry.uncurried.L, kotlin.Function1((org.funky.curry.uncurried.M, kotlin.Function1((org.funky.curry.uncurried.N, kotlin.Function1((org.funky.curry.uncurried.O, kotlin.Function1((org.funky.curry.uncurried.P, kotlin.Function1((org.funky.curry.uncurried.Q, kotlin.Function1((org.funky.curry.uncurried.R, kotlin.Function1((org.funky.curry.uncurried.S, kotlin.Function1((org.funky.curry.uncurried.T, kotlin.Function1((org.funky.curry.uncurried.U, kotlin.Function1((org.funky.curry.uncurried.V, org.funky.curry.uncurried.Z)))))))))))))))))))))))))))))))))))))))))))))org.funky.curry/kotlin.-function1/uncurried.md
$dokka.location:org.funky.curry$uncurried(kotlin.Function1((org.funky.curry.uncurried.A, kotlin.Function1((org.funky.curry.uncurried.B, kotlin.Function1((org.funky.curry.uncurried.C, kotlin.Function1((org.funky.curry.uncurried.D, kotlin.Function1((org.funky.curry.uncurried.E, kotlin.Function1((org.funky.curry.uncurried.F, kotlin.Function1((org.funky.curry.uncurried.G, kotlin.Function1((org.funky.curry.uncurried.H, kotlin.Function1((org.funky.curry.uncurried.I, kotlin.Function1((org.funky.curry.uncurried.J, kotlin.Function1((org.funky.curry.uncurried.K, kotlin.Function1((org.funky.curry.uncurried.L, kotlin.Function1((org.funky.curry.uncurried.M, kotlin.Function1((org.funky.curry.uncurried.N, kotlin.Function1((org.funky.curry.uncurried.O, kotlin.Function1((org.funky.curry.uncurried.P, kotlin.Function1((org.funky.curry.uncurried.Q, kotlin.Function1((org.funky.curry.uncurried.R, kotlin.Function1((org.funky.curry.uncurried.S, kotlin.Function1((org.funky.curry.uncurried.T, kotlin.Function1((org.funky.curry.uncurried.U, org.funky.curry.uncurried.Z)))))))))))))))))))))))))))))))))))))))))))org.funky.curry/kotlin.-function1/uncurried.md
$dokka.location:org.funky.curry$uncurried(kotlin.Function1((org.funky.curry.uncurried.A, kotlin.Function1((org.funky.curry.uncurried.B, kotlin.Function1((org.funky.curry.uncurried.C, kotlin.Function1((org.funky.curry.uncurried.D, kotlin.Function1((org.funky.curry.uncurried.E, kotlin.Function1((org.funky.curry.uncurried.F, kotlin.Function1((org.funky.curry.uncurried.G, kotlin.Function1((org.funky.curry.uncurried.H, kotlin.Function1((org.funky.curry.uncurried.I, kotlin.Function1((org.funky.curry.uncurried.J, kotlin.Function1((org.funky.curry.uncurried.K, kotlin.Function1((org.funky.curry.uncurried.L, kotlin.Function1((org.funky.curry.uncurried.M, kotlin.Function1((org.funky.curry.uncurried.N, kotlin.Function1((org.funky.curry.uncurried.O, kotlin.Function1((org.funky.curry.uncurried.P, kotlin.Function1((org.funky.curry.uncurried.Q, kotlin.Function1((org.funky.curry.uncurried.R, kotlin.Function1((org.funky.curry.uncurried.S, kotlin.Function1((org.funky.curry.uncurried.T, org.funky.curry.uncurried.Z)))))))))))))))))))))))))))))))))))))))))org.funky.curry/kotlin.-function1/uncurried.md
$dokka.location:org.funky.curry$uncurried(kotlin.Function1((org.funky.curry.uncurried.A, kotlin.Function1((org.funky.curry.uncurried.B, kotlin.Function1((org.funky.curry.uncurried.C, kotlin.Function1((org.funky.curry.uncurried.D, kotlin.Function1((org.funky.curry.uncurried.E, kotlin.Function1((org.funky.curry.uncurried.F, kotlin.Function1((org.funky.curry.uncurried.G, kotlin.Function1((org.funky.curry.uncurried.H, kotlin.Function1((org.funky.curry.uncurried.I, kotlin.Function1((org.funky.curry.uncurried.J, kotlin.Function1((org.funky.curry.uncurried.K, kotlin.Function1((org.funky.curry.uncurried.L, kotlin.Function1((org.funky.curry.uncurried.M, kotlin.Function1((org.funky.curry.uncurried.N, kotlin.Function1((org.funky.curry.uncurried.O, kotlin.Function1((org.funky.curry.uncurried.P, kotlin.Function1((org.funky.curry.uncurried.Q, kotlin.Function1((org.funky.curry.uncurried.R, kotlin.Function1((org.funky.curry.uncurried.S, org.funky.curry.uncurried.Z)))))))))))))))))))))))))))))))))))))))org.funky.curry/kotlin.-function1/uncurried.md
$dokka.location:org.funky.curry$uncurried(kotlin.Function1((org.funky.curry.uncurried.A, kotlin.Function1((org.funky.curry.uncurried.B, kotlin.Function1((org.funky.curry.uncurried.C, kotlin.Function1((org.funky.curry.uncurried.D, kotlin.Function1((org.funky.curry.uncurried.E, kotlin.Function1((org.funky.curry.uncurried.F, kotlin.Function1((org.funky.curry.uncurried.G, kotlin.Function1((org.funky.curry.uncurried.H, kotlin.Function1((org.funky.curry.uncurried.I, kotlin.Function1((org.funky.curry.uncurried.J, kotlin.Function1((org.funky.curry.uncurried.K, kotlin.Function1((org.funky.curry.uncurried.L, kotlin.Function1((org.funky.curry.uncurried.M, kotlin.Function1((org.funky.curry.uncurried.N, kotlin.Function1((org.funky.curry.uncurried.O, kotlin.Function1((org.funky.curry.uncurried.P, kotlin.Function1((org.funky.curry.uncurried.Q, kotlin.Function1((org.funky.curry.uncurried.R, org.funky.curry.uncurried.Z)))))))))))))))))))))))))))))))))))))org.funky.curry/kotlin.-function1/uncurried.md
$dokka.location:org.funky.curry$uncurried(kotlin.Function1((org.funky.curry.uncurried.A, kotlin.Function1((org.funky.curry.uncurried.B, kotlin.Function1((org.funky.curry.uncurried.C, kotlin.Function1((org.funky.curry.uncurried.D, kotlin.Function1((org.funky.curry.uncurried.E, kotlin.Function1((org.funky.curry.uncurried.F, kotlin.Function1((org.funky.curry.uncurried.G, kotlin.Function1((org.funky.curry.uncurried.H, kotlin.Function1((org.funky.curry.uncurried.I, kotlin.Function1((org.funky.curry.uncurried.J, kotlin.Function1((org.funky.curry.uncurried.K, kotlin.Function1((org.funky.curry.uncurried.L, kotlin.Function1((org.funky.curry.uncurried.M, kotlin.Function1((org.funky.curry.uncurried.N, kotlin.Function1((org.funky.curry.uncurried.O, kotlin.Function1((org.funky.curry.uncurried.P, kotlin.Function1((org.funky.curry.uncurried.Q, org.funky.curry.uncurried.Z)))))))))))))))))))))))))))))))))))org.funky.curry/kotlin.-function1/uncurried.md
$dokka.location:org.funky.curry$uncurried(kotlin.Function1((org.funky.curry.uncurried.A, kotlin.Function1((org.funky.curry.uncurried.B, kotlin.Function1((org.funky.curry.uncurried.C, kotlin.Function1((org.funky.curry.uncurried.D, kotlin.Function1((org.funky.curry.uncurried.E, kotlin.Function1((org.funky.curry.uncurried.F, kotlin.Function1((org.funky.curry.uncurried.G, kotlin.Function1((org.funky.curry.uncurried.H, kotlin.Function1((org.funky.curry.uncurried.I, kotlin.Function1((org.funky.curry.uncurried.J, kotlin.Function1((org.funky.curry.uncurried.K, kotlin.Function1((org.funky.curry.uncurried.L, kotlin.Function1((org.funky.curry.uncurried.M, kotlin.Function1((org.funky.curry.uncurried.N, kotlin.Function1((org.funky.curry.uncurried.O, kotlin.Function1((org.funky.curry.uncurried.P, org.funky.curry.uncurried.Z)))))))))))))))))))))))))))))))))org.funky.curry/kotlin.-function1/uncurried.md
$dokka.location:org.funky.curry$uncurried(kotlin.Function1((org.funky.curry.uncurried.A, kotlin.Function1((org.funky.curry.uncurried.B, kotlin.Function1((org.funky.curry.uncurried.C, kotlin.Function1((org.funky.curry.uncurried.D, kotlin.Function1((org.funky.curry.uncurried.E, kotlin.Function1((org.funky.curry.uncurried.F, kotlin.Function1((org.funky.curry.uncurried.G, kotlin.Function1((org.funky.curry.uncurried.H, kotlin.Function1((org.funky.curry.uncurried.I, kotlin.Function1((org.funky.curry.uncurried.J, kotlin.Function1((org.funky.curry.uncurried.K, kotlin.Function1((org.funky.curry.uncurried.L, kotlin.Function1((org.funky.curry.uncurried.M, kotlin.Function1((org.funky.curry.uncurried.N, kotlin.Function1((org.funky.curry.uncurried.O, org.funky.curry.uncurried.Z)))))))))))))))))))))))))))))))org.funky.curry/kotlin.-function1/uncurried.md
$dokka.location:org.funky.curry$uncurried(kotlin.Function1((org.funky.curry.uncurried.A, kotlin.Function1((org.funky.curry.uncurried.B, kotlin.Function1((org.funky.curry.uncurried.C, kotlin.Function1((org.funky.curry.uncurried.D, kotlin.Function1((org.funky.curry.uncurried.E, kotlin.Function1((org.funky.curry.uncurried.F, kotlin.Function1((org.funky.curry.uncurried.G, kotlin.Function1((org.funky.curry.uncurried.H, kotlin.Function1((org.funky.curry.uncurried.I, kotlin.Function1((org.funky.curry.uncurried.J, kotlin.Function1((org.funky.curry.uncurried.K, kotlin.Function1((org.funky.curry.uncurried.L, kotlin.Function1((org.funky.curry.uncurried.M, kotlin.Function1((org.funky.curry.uncurried.N, org.funky.curry.uncurried.Z)))))))))))))))))))))))))))))org.funky.curry/kotlin.-function1/uncurried.md
$dokka.location:org.funky.curry$uncurried(kotlin.Function1((org.funky.curry.uncurried.A, kotlin.Function1((org.funky.curry.uncurried.B, kotlin.Function1((org.funky.curry.uncurried.C, kotlin.Function1((org.funky.curry.uncurried.D, kotlin.Function1((org.funky.curry.uncurried.E, kotlin.Function1((org.funky.curry.uncurried.F, kotlin.Function1((org.funky.curry.uncurried.G, kotlin.Function1((org.funky.curry.uncurried.H, kotlin.Function1((org.funky.curry.uncurried.I, kotlin.Function1((org.funky.curry.uncurried.J, kotlin.Function1((org.funky.curry.uncurried.K, kotlin.Function1((org.funky.curry.uncurried.L, kotlin.Function1((org.funky.curry.uncurried.M, org.funky.curry.uncurried.Z)))))))))))))))))))))))))))org.funky.curry/kotlin.-function1/uncurried.md
$dokka.location:org.funky.curry$uncurried(kotlin.Function1((org.funky.curry.uncurried.A, kotlin.Function1((org.funky.curry.uncurried.B, kotlin.Function1((org.funky.curry.uncurried.C, kotlin.Function1((org.funky.curry.uncurried.D, kotlin.Function1((org.funky.curry.uncurried.E, kotlin.Function1((org.funky.curry.uncurried.F, kotlin.Function1((org.funky.curry.uncurried.G, kotlin.Function1((org.funky.curry.uncurried.H, kotlin.Function1((org.funky.curry.uncurried.I, kotlin.Function1((org.funky.curry.uncurried.J, kotlin.Function1((org.funky.curry.uncurried.K, kotlin.Function1((org.funky.curry.uncurried.L, org.funky.curry.uncurried.Z)))))))))))))))))))))))))org.funky.curry/kotlin.-function1/uncurried.md
$dokka.location:org.funky.curry$uncurried(kotlin.Function1((org.funky.curry.uncurried.A, kotlin.Function1((org.funky.curry.uncurried.B, kotlin.Function1((org.funky.curry.uncurried.C, kotlin.Function1((org.funky.curry.uncurried.D, kotlin.Function1((org.funky.curry.uncurried.E, kotlin.Function1((org.funky.curry.uncurried.F, kotlin.Function1((org.funky.curry.uncurried.G, kotlin.Function1((org.funky.curry.uncurried.H, kotlin.Function1((org.funky.curry.uncurried.I, kotlin.Function1((org.funky.curry.uncurried.J, kotlin.Function1((org.funky.curry.uncurried.K, org.funky.curry.uncurried.Z)))))))))))))))))))))))org.funky.curry/kotlin.-function1/uncurried.md
$dokka.location:org.funky.curry$uncurried(kotlin.Function1((org.funky.curry.uncurried.A, kotlin.Function1((org.funky.curry.uncurried.B, kotlin.Function1((org.funky.curry.uncurried.C, kotlin.Function1((org.funky.curry.uncurried.D, kotlin.Function1((org.funky.curry.uncurried.E, kotlin.Function1((org.funky.curry.uncurried.F, kotlin.Function1((org.funky.curry.uncurried.G, kotlin.Function1((org.funky.curry.uncurried.H, kotlin.Function1((org.funky.curry.uncurried.I, kotlin.Function1((org.funky.curry.uncurried.J, org.funky.curry.uncurried.Z)))))))))))))))))))))org.funky.curry/kotlin.-function1/uncurried.md
$dokka.location:org.funky.curry$uncurried(kotlin.Function1((org.funky.curry.uncurried.A, kotlin.Function1((org.funky.curry.uncurried.B, kotlin.Function1((org.funky.curry.uncurried.C, kotlin.Function1((org.funky.curry.uncurried.D, kotlin.Function1((org.funky.curry.uncurried.E, kotlin.Function1((org.funky.curry.uncurried.F, kotlin.Function1((org.funky.curry.uncurried.G, kotlin.Function1((org.funky.curry.uncurried.H, kotlin.Function1((org.funky.curry.uncurried.I, org.funky.curry.uncurried.Z)))))))))))))))))))org.funky.curry/kotlin.-function1/uncurried.md
$dokka.location:org.funky.curry$uncurried(kotlin.Function1((org.funky.curry.uncurried.A, kotlin.Function1((org.funky.curry.uncurried.B, kotlin.Function1((org.funky.curry.uncurried.C, kotlin.Function1((org.funky.curry.uncurried.D, kotlin.Function1((org.funky.curry.uncurried.E, kotlin.Function1((org.funky.curry.uncurried.F, kotlin.Function1((org.funky.curry.uncurried.G, kotlin.Function1((org.funky.curry.uncurried.H, org.funky.curry.uncurried.Z)))))))))))))))))org.funky.curry/kotlin.-function1/uncurried.md
$dokka.location:org.funky.curry$uncurried(kotlin.Function1((org.funky.curry.uncurried.A, kotlin.Function1((org.funky.curry.uncurried.B, kotlin.Function1((org.funky.curry.uncurried.C, kotlin.Function1((org.funky.curry.uncurried.D, kotlin.Function1((org.funky.curry.uncurried.E, kotlin.Function1((org.funky.curry.uncurried.F, kotlin.Function1((org.funky.curry.uncurried.G, org.funky.curry.uncurried.Z)))))))))))))))org.funky.curry/kotlin.-function1/uncurried.md
$dokka.location:org.funky.curry$uncurried(kotlin.Function1((org.funky.curry.uncurried.A, kotlin.Function1((org.funky.curry.uncurried.B, kotlin.Function1((org.funky.curry.uncurried.C, kotlin.Function1((org.funky.curry.uncurried.D, kotlin.Function1((org.funky.curry.uncurried.E, kotlin.Function1((org.funky.curry.uncurried.F, org.funky.curry.uncurried.Z)))))))))))))org.funky.curry/kotlin.-function1/uncurried.md
$dokka.location:org.funky.curry$uncurried(kotlin.Function1((org.funky.curry.uncurried.A, kotlin.Function1((org.funky.curry.uncurried.B, kotlin.Function1((org.funky.curry.uncurried.C, kotlin.Function1((org.funky.curry.uncurried.D, kotlin.Function1((org.funky.curry.uncurried.E, org.funky.curry.uncurried.Z)))))))))))org.funky.curry/kotlin.-function1/uncurried.md
$dokka.location:org.funky.curry$uncurried(kotlin.Function1((org.funky.curry.uncurried.A, kotlin.Function1((org.funky.curry.uncurried.B, kotlin.Function1((org.funky.curry.uncurried.C, kotlin.Function1((org.funky.curry.uncurried.D, org.funky.curry.uncurried.Z)))))))))org.funky.curry/kotlin.-function1/uncurried.md
$dokka.location:org.funky.curry$uncurried(kotlin.Function1((org.funky.curry.uncurried.A, kotlin.Function1((org.funky.curry.uncurried.B, kotlin.Function1((org.funky.curry.uncurried.C, org.funky.curry.uncurried.Z)))))))org.funky.curry/kotlin.-function1/uncurried.md
$dokka.location:org.funky.curry$uncurried(kotlin.Function1((org.funky.curry.uncurried.A, kotlin.Function1((org.funky.curry.uncurried.B, org.funky.curry.uncurried.Z)))))org.funky.curry/kotlin.-function1/uncurried.md
$dokka.location:org.funky.curry.ext$invoke(kotlin.Function10((org.funky.curry.ext.invoke.A, org.funky.curry.ext.invoke.B, org.funky.curry.ext.invoke.C, org.funky.curry.ext.invoke.D, org.funky.curry.ext.invoke.E, org.funky.curry.ext.invoke.F, org.funky.curry.ext.invoke.G, org.funky.curry.ext.invoke.H, org.funky.curry.ext.invoke.I, org.funky.curry.ext.invoke.J, org.funky.curry.ext.invoke.K)), org.funky.curry.ext.invoke.A)org.funky.curry.ext/kotlin.-function10/invoke.md
$dokka.location:org.funky.curry.ext$invoke(kotlin.Function2((org.funky.curry.ext.invoke.A, org.funky.curry.ext.invoke.B, org.funky.curry.ext.invoke.C)), org.funky.curry.ext.invoke.A)org.funky.curry.ext/kotlin.-function2/invoke.md
$dokka.location:org.funky.curry.ext$invoke(kotlin.Function3((org.funky.curry.ext.invoke.A, org.funky.curry.ext.invoke.B, org.funky.curry.ext.invoke.C, org.funky.curry.ext.invoke.D)), org.funky.curry.ext.invoke.A)org.funky.curry.ext/kotlin.-function3/invoke.md
$dokka.location:org.funky.curry.ext$invoke(kotlin.Function4((org.funky.curry.ext.invoke.A, org.funky.curry.ext.invoke.B, org.funky.curry.ext.invoke.C, org.funky.curry.ext.invoke.D, org.funky.curry.ext.invoke.E)), org.funky.curry.ext.invoke.A)org.funky.curry.ext/kotlin.-function4/invoke.md
$dokka.location:org.funky.curry.ext$invoke(kotlin.Function5((org.funky.curry.ext.invoke.A, org.funky.curry.ext.invoke.B, org.funky.curry.ext.invoke.C, org.funky.curry.ext.invoke.D, org.funky.curry.ext.invoke.E, org.funky.curry.ext.invoke.F)), org.funky.curry.ext.invoke.A)org.funky.curry.ext/kotlin.-function5/invoke.md
$dokka.location:org.funky.curry.ext$invoke(kotlin.Function6((org.funky.curry.ext.invoke.A, org.funky.curry.ext.invoke.B, org.funky.curry.ext.invoke.C, org.funky.curry.ext.invoke.D, org.funky.curry.ext.invoke.E, org.funky.curry.ext.invoke.F, org.funky.curry.ext.invoke.G)), org.funky.curry.ext.invoke.A)org.funky.curry.ext/kotlin.-function6/invoke.md
$dokka.location:org.funky.curry.ext$invoke(kotlin.Function7((org.funky.curry.ext.invoke.A, org.funky.curry.ext.invoke.B, org.funky.curry.ext.invoke.C, org.funky.curry.ext.invoke.D, org.funky.curry.ext.invoke.E, org.funky.curry.ext.invoke.F, org.funky.curry.ext.invoke.G, org.funky.curry.ext.invoke.H)), org.funky.curry.ext.invoke.A)org.funky.curry.ext/kotlin.-function7/invoke.md
$dokka.location:org.funky.curry.ext$invoke(kotlin.Function8((org.funky.curry.ext.invoke.A, org.funky.curry.ext.invoke.B, org.funky.curry.ext.invoke.C, org.funky.curry.ext.invoke.D, org.funky.curry.ext.invoke.E, org.funky.curry.ext.invoke.F, org.funky.curry.ext.invoke.G, org.funky.curry.ext.invoke.H, org.funky.curry.ext.invoke.I)), org.funky.curry.ext.invoke.A)org.funky.curry.ext/kotlin.-function8/invoke.md
$dokka.location:org.funky.curry.ext$invoke(kotlin.Function9((org.funky.curry.ext.invoke.A, org.funky.curry.ext.invoke.B, org.funky.curry.ext.invoke.C, org.funky.curry.ext.invoke.D, org.funky.curry.ext.invoke.E, org.funky.curry.ext.invoke.F, org.funky.curry.ext.invoke.G, org.funky.curry.ext.invoke.H, org.funky.curry.ext.invoke.I, org.funky.curry.ext.invoke.J)), org.funky.curry.ext.invoke.A)org.funky.curry.ext/kotlin.-function9/invoke.md
$dokka.location:org.funky.either$liftA(kotlin.Function1((org.funky.either.liftA.A, org.funky.either.liftA.R)))org.funky.either/kotlin.-function1/lift-a.md
$dokka.location:org.funky.either$liftA2(kotlin.Function2((org.funky.either.liftA2.A, org.funky.either.liftA2.B, org.funky.either.liftA2.R)))org.funky.either/kotlin.-function2/lift-a2.md
$dokka.location:org.funky.either$sequence(kotlin.collections.List((org.funky.either.Either((org.funky.either.sequence.L, org.funky.either.sequence.A)))))org.funky.either/kotlin.collections.-list/sequence.md
$dokka.location:org.funky.either$toLeft(kotlin.Pair((org.funky.either.toLeft.L, org.funky.either.toLeft.R)))org.funky.either/kotlin.-pair/to-left.md
$dokka.location:org.funky.either$toRight(kotlin.Pair((org.funky.either.toRight.L, org.funky.either.toRight.R)))org.funky.either/kotlin.-pair/to-right.md
$dokka.location:org.funky.either$traverseA(kotlin.collections.List((org.funky.either.traverseA.A)), kotlin.Function1((org.funky.either.traverseA.A, org.funky.either.Either((org.funky.either.traverseA.L, org.funky.either.traverseA.B)))))org.funky.either/kotlin.collections.-list/traverse-a.md
$dokka.location:org.funky.option$firstOption(kotlin.Array((org.funky.option.firstOption.A)))org.funky.option/kotlin.-array/first-option.md
$dokka.location:org.funky.option$firstOption(kotlin.Array((org.funky.option.firstOption.A)), kotlin.Function1((org.funky.option.firstOption.A, kotlin.Boolean)))org.funky.option/kotlin.-array/first-option.md
$dokka.location:org.funky.option$firstOption(kotlin.BooleanArray)org.funky.option/kotlin.-boolean-array/first-option.md
$dokka.location:org.funky.option$firstOption(kotlin.BooleanArray, kotlin.Function1((kotlin.Boolean, )))org.funky.option/kotlin.-boolean-array/first-option.md
$dokka.location:org.funky.option$firstOption(kotlin.ByteArray)org.funky.option/kotlin.-byte-array/first-option.md
$dokka.location:org.funky.option$firstOption(kotlin.ByteArray, kotlin.Function1((kotlin.Byte, kotlin.Boolean)))org.funky.option/kotlin.-byte-array/first-option.md
$dokka.location:org.funky.option$firstOption(kotlin.CharArray)org.funky.option/kotlin.-char-array/first-option.md
$dokka.location:org.funky.option$firstOption(kotlin.CharArray, kotlin.Function1((kotlin.Char, kotlin.Boolean)))org.funky.option/kotlin.-char-array/first-option.md
$dokka.location:org.funky.option$firstOption(kotlin.DoubleArray)org.funky.option/kotlin.-double-array/first-option.md
$dokka.location:org.funky.option$firstOption(kotlin.DoubleArray, kotlin.Function1((kotlin.Double, kotlin.Boolean)))org.funky.option/kotlin.-double-array/first-option.md
$dokka.location:org.funky.option$firstOption(kotlin.FloatArray)org.funky.option/kotlin.-float-array/first-option.md
$dokka.location:org.funky.option$firstOption(kotlin.FloatArray, kotlin.Function1((kotlin.Float, kotlin.Boolean)))org.funky.option/kotlin.-float-array/first-option.md
$dokka.location:org.funky.option$firstOption(kotlin.IntArray)org.funky.option/kotlin.-int-array/first-option.md
$dokka.location:org.funky.option$firstOption(kotlin.IntArray, kotlin.Function1((kotlin.Int, kotlin.Boolean)))org.funky.option/kotlin.-int-array/first-option.md
$dokka.location:org.funky.option$firstOption(kotlin.LongArray)org.funky.option/kotlin.-long-array/first-option.md
$dokka.location:org.funky.option$firstOption(kotlin.LongArray, kotlin.Function1((kotlin.Long, kotlin.Boolean)))org.funky.option/kotlin.-long-array/first-option.md
$dokka.location:org.funky.option$firstOption(kotlin.ShortArray)org.funky.option/kotlin.-short-array/first-option.md
$dokka.location:org.funky.option$firstOption(kotlin.ShortArray, kotlin.Function1((kotlin.Short, kotlin.Boolean)))org.funky.option/kotlin.-short-array/first-option.md
$dokka.location:org.funky.option$firstOption(kotlin.String)org.funky.option/kotlin.-string/first-option.md
$dokka.location:org.funky.option$firstOption(kotlin.String, kotlin.Function1((kotlin.Char, kotlin.Boolean)))org.funky.option/kotlin.-string/first-option.md
$dokka.location:org.funky.option$firstOption(kotlin.collections.Iterable((org.funky.option.firstOption.A)))org.funky.option/kotlin.collections.-iterable/first-option.md
$dokka.location:org.funky.option$firstOption(kotlin.collections.Iterable((org.funky.option.firstOption.A)), kotlin.Function1((org.funky.option.firstOption.A, kotlin.Boolean)))org.funky.option/kotlin.collections.-iterable/first-option.md
$dokka.location:org.funky.option$firstOption(kotlin.sequences.Sequence((org.funky.option.firstOption.A)))org.funky.option/kotlin.sequences.-sequence/first-option.md
$dokka.location:org.funky.option$firstOption(kotlin.sequences.Sequence((org.funky.option.firstOption.A)), kotlin.Function1((org.funky.option.firstOption.A, kotlin.Boolean)))org.funky.option/kotlin.sequences.-sequence/first-option.md
$dokka.location:org.funky.option$liftA(kotlin.Function1((org.funky.option.liftA.A, org.funky.option.liftA.B)))org.funky.option/kotlin.-function1/lift-a.md
$dokka.location:org.funky.option$liftA2(kotlin.Function2((org.funky.option.liftA2.A, org.funky.option.liftA2.B, org.funky.option.liftA2.C)))org.funky.option/kotlin.-function2/lift-a2.md
$dokka.location:org.funky.option$sequenceA(kotlin.collections.List((org.funky.option.Option((org.funky.option.sequenceA.A)))))org.funky.option/kotlin.collections.-list/sequence-a.md
$dokka.location:org.funky.option$traverseA(kotlin.collections.List((org.funky.option.traverseA.A)), kotlin.Function1((org.funky.option.traverseA.A, org.funky.option.Option((org.funky.option.traverseA.B)))))org.funky.option/kotlin.collections.-list/traverse-a.md
$dokka.location:org.funky.util$andThen(kotlin.Function1((org.funky.util.andThen.A, org.funky.util.andThen.B)), kotlin.Function1((org.funky.util.andThen.B, org.funky.util.andThen.C)))org.funky.util/kotlin.-function1/and-then.md
$dokka.location:org.funky.util$compose(kotlin.Function1((org.funky.util.compose.B, org.funky.util.compose.C)), kotlin.Function1((org.funky.util.compose.A, org.funky.util.compose.B)))org.funky.util/kotlin.-function1/compose.md
$dokka.location:org.funky.util$flip(kotlin.Function2((org.funky.util.flip.A, org.funky.util.flip.B, org.funky.util.flip.C)))org.funky.util/kotlin.-function2/flip.md
$dokka.location:org.funky.util$flip(kotlin.Function3((org.funky.util.flip.A, org.funky.util.flip.B, org.funky.util.flip.C, org.funky.util.flip.D)))org.funky.util/kotlin.-function3/flip.md
$dokka.location:org.funky.util$flip(kotlin.Function4((org.funky.util.flip.A, org.funky.util.flip.B, org.funky.util.flip.C, org.funky.util.flip.D, org.funky.util.flip.E)))org.funky.util/kotlin.-function4/flip.md
$dokka.location:org.funky.util$flip(kotlin.Function5((org.funky.util.flip.A, org.funky.util.flip.B, org.funky.util.flip.C, org.funky.util.flip.D, org.funky.util.flip.E, org.funky.util.flip.F)))org.funky.util/kotlin.-function5/flip.md
$dokka.location:org.funky.util$flip(kotlin.Function6((org.funky.util.flip.A, org.funky.util.flip.B, org.funky.util.flip.C, org.funky.util.flip.D, org.funky.util.flip.E, org.funky.util.flip.F, org.funky.util.flip.G)))org.funky.util/kotlin.-function6/flip.md
$dokka.location:org.funky.util$flip(kotlin.Function7((org.funky.util.flip.A, org.funky.util.flip.B, org.funky.util.flip.C, org.funky.util.flip.D, org.funky.util.flip.E, org.funky.util.flip.F, org.funky.util.flip.G, org.funky.util.flip.H)))org.funky.util/kotlin.-function7/flip.md
$dokka.location:org.funky.util$forwardCompose(kotlin.Function1((org.funky.util.forwardCompose.A, org.funky.util.forwardCompose.B)), kotlin.Function1((org.funky.util.forwardCompose.B, org.funky.util.forwardCompose.C)))org.funky.util/kotlin.-function1/forward-compose.md
$dokka.location:org.funky.util$until(kotlin.Function1((org.funky.util.until.T, )), kotlin.Function1((org.funky.util.until.T, kotlin.Boolean)), org.funky.util.until.T)org.funky.util/kotlin.-function1/until.md
$dokka.location:org.funky.validation$liftA(kotlin.Function1((org.funky.validation.liftA.A, org.funky.validation.liftA.R)))org.funky.validation/kotlin.-function1/lift-a.md
$dokka.location:org.funky.validation$liftA2(kotlin.Function2((org.funky.validation.liftA2.A, org.funky.validation.liftA2.B, org.funky.validation.liftA2.C)))org.funky.validation/kotlin.-function2/lift-a2.md
$dokka.location:org.funky.validation$sequence(kotlin.collections.List((org.funky.validation.ValidationNEL((org.funky.validation.sequence.L, org.funky.validation.sequence.A)))))org.funky.validation/kotlin.collections.-list/sequence.md
$dokka.location:org.funky.validation$toFailureNel(kotlin.Pair((org.funky.validation.toFailureNel.L, org.funky.validation.toFailureNel.R)))org.funky.validation/kotlin.-pair/to-failure-nel.md
$dokka.location:org.funky.validation$toSuccessNel(kotlin.Pair((org.funky.validation.toSuccessNel.L, org.funky.validation.toSuccessNel.R)))org.funky.validation/kotlin.-pair/to-success-nel.md
$dokka.location:org.funky.validation$traverseA(kotlin.collections.List((org.funky.validation.traverseA.A)), kotlin.Function1((org.funky.validation.traverseA.A, org.funky.validation.ValidationNEL((org.funky.validation.traverseA.L, org.funky.validation.traverseA.B)))))org.funky.validation/kotlin.collections.-list/traverse-a.md
org.funky.collections
org.funky.controltry
org.funky.curry
org.funky.curry.ext
org.funky.either
org.funky.option
org.funky.util
org.funky.validation
